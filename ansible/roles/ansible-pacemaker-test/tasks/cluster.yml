---
# ===================================================
# ziskani uvodniho stavu clusteru a zobrazeni uzivateli

- name: check pacemaker status
  command: crm status
  register: _crm_status
  
- name: print pacemaker status
  debug:
    var: _crm_status.stdout_lines

- name: check pacemaker configure status
  command: crm configure show
  register: _crm_configure_status
  
- name: print pacemaker configure status
  debug:
    var: _crm_configure_status.stdout_lines

# ===================================================
# konfigurace clusteru

- name: cluster | Capturing Cluster Properties
  command: "pcs property show"
  register: "_pcs_property_show"
  changed_when: false

- name: cluster | Capturing Cluster Resources
  command: "pcs resource show --full"
  register: "_pcs_resource_show"
  changed_when: false

- name: cluster | Capturing Cluster Constraints
  command: "pcs constraint show --full"
  register: "_pcs_constraint_show"
  changed_when: false

- name: cluster | Setting Stonith
  command: >
           pcs property set stonith-enabled=false
  when: >
        pacemaker_disable_stonith and
        ('stonith-enabled: false' not in _pcs_property_show['stdout'])

- name: cluster | Setting Cluster Settings
  command: >
           pcs property set {{ item['property'] }}={{ item['value'] }}
  with_items: '{{ pacemaker_cluster_settings }}'
  when: >
        pacemaker_cluster_settings is defined and
        ("{{ item['property'] }}: {{ item['value'] }}" not in _pcs_property_show['stdout'])

- name: cluster | Creating Cluster Resources
  command: >
           pcs resource create {{ item['resource_id'] }}
           {{ item['provider'] }} {{ item['options']|join(' ') }}
           {% if item['op'] is defined %}op {{ item['op'] }}{% endif %}
           {% if item['op_options'] is defined %}{{ item['op_options']|join(' ') }}{% endif %}
           {% if item['meta'] is defined %}meta {{ item['meta']|join(' ') }}{% endif %}
  with_items: '{{ pacemaker_cluster_resources }}'
  when: >
        (pacemaker_cluster_resources is defined) and
        (item['options'] is defined and
        (item['resource_id'] not in _pcs_resource_show['stdout'] and
        item['options']|join(' ') not in _pcs_resource_show['stdout'])) and
        item['action']|lower == 'create'

- name: cluster | Creating Cluster Resources without options
  command: >
           pcs resource create {{ item['resource_id'] }}
           {{ item['provider'] }}
           {% if item['meta'] is defined %}meta {{ item['meta']|join(' ') }}{% endif %}
  with_items: '{{ pacemaker_cluster_resources }}'
  when: >
        (pacemaker_cluster_resources is defined) and
        (item['options'] is not defined) and
        (item['resource_id'] not in _pcs_resource_show['stdout']) and
        (item['action']|lower == 'create')

- name: cluster | Cloning Cluster Resources
  command: >
           crm configure clone "clone_{{ item['resource_id'] }}" "{{ item['resource_id'] }}"
           meta globally-unique=false clone-max=2 clone-node-max=1
  with_items: '{{ pacemaker_cluster_cloned_resources }}'
  when: >
        (pacemaker_cluster_cloned_resources is defined)
        and item['resource_id'] not in _pcs_resource_show['stdout']

- name: cluster | Adding all cluster resources to group
  command: pcs resource group add {{ pacemaker_group_name }} {{ item['resource_id'] }}
  with_items: '{{ pacemaker_cluster_grouped_resources }}'
  when: pacemaker_group_name not in _pcs_resource_show['stdout']

#- name: cluster | Adding Cluster colocation Constraints
#  command: >
#           pcs constraint colocation add
#           {% if item['source_resource_id'] is defined %}
#           {{ item['source_resource_id'] }}
#           {% endif %}
#           {% if item['target_resource_id'] is defined %}
#           {{ item['target_resource_id'] }}
#           {% endif %}
#           {{ item['score']|default('INFINITY') }}
#  with_items: '{{ pacemaker_cluster_constraints }}'
#  when: >
#        pacemaker_cluster_constraints is defined and
#        (((item['action'] is defined and
#        item['action']|lower == 'add') and
#        item['constraint']|lower == 'colocation') and
#        (item['source_resource_id'] and
#        item['target_resource_id'] not in _pcs_constraint_show['stdout']))

- name: cluster | Adding Cluster location Constraints
  command: >
           pcs constraint location add
           {% if item['name'] is defined %}
           {{ item['name'] }}
           {% endif %}
           {% if item['resource_id'] is defined %}
           {{ item['resource_id'] }}
           {% endif %}
           {% if item['target_node'] is defined %}
           {{ item['target_node'] }}
           {% endif %}
           {{ item['score']|default('INFINITY') }}
  with_items: '{{ pacemaker_cluster_constraints }}'
  when: >
        pacemaker_cluster_constraints is defined and
        (((item['action'] is defined and
        item['action']|lower == 'add') and
        item['constraint']|lower == 'location') and
        (item['resource_id'] and
        item['name'] and
        item['target_node'] and
        item['score'] not in _pcs_constraint_show['stdout']))

#- name: cluster | Cluster order Constraints
#  command: >
#           pcs constraint order set
#           {% for res in item['resources'] %}
#           {{ res['resource'] }}
#           {% endfor %}
#  with_items: '{{ pacemaker_cluster_constraints }}'
#  when: >
#        pacemaker_cluster_constraints is defined and
#        item['constraint']|lower == 'order'
#        {% for res in item['resources'] %}
#        and '{{ res['resource'] }}' not in _pcs_constraint_show['stdout']
#        {% endfor %}

# ===================================================
# ziskani finalniho stavu clusteru a zobrazeni uzivateli

- name: check pacemaker status
  command: crm status
  register: _crm_status
  
- name: print pacemaker status
  debug:
    var: _crm_status.stdout_lines

- name: check pacemaker configure status
  command: crm configure show
  register: _crm_configure_status
  
- name: print pacemaker configure status
  debug:
    var: _crm_configure_status.stdout_lines

# ===================================================

